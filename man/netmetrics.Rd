% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/netmetrics.R
\name{netmetrics}
\alias{netmetrics}
\title{Measure network metrics on a single network}
\usage{
netmetrics(net, metrics)
}
\arguments{
\item{net}{A network (adjacency matrix)}

\item{metrics}{A vector of strings indicating the metrics that should be measured (see Details)}
}
\value{
A vector with a value for each of the metrics specified in the \code{metrics} argument. The columns are named with the metric names given in the \code{metrics} argument.
}
\description{
\code{netmetrics()} measures a set of network metrics on an input network.
}
\details{
The function uses the \code{igraph} package for some of the metric calculations.

About \code{net}:
\itemize{
\item The input network must be undirected, and the network matrix must be symmetric with zeros in the diagonal.
}

About \code{metrics}:
\itemize{
\item 'clust' gives the global clustering coefficient, also called transitivity (measured as the ratio of triangles to connected triples).
\item 'clustw' gives the weighted clustering coefficient (as defined in Barrat et al. 2004, see References). Nodes with one link get a weighted clustering of zero.
\item 'path' gives the average path length, i.e. the average unweighted distance between nodes.
\item 'pathw' gives the average weighted path length, i.e. the average weighted distance between nodes (with smaller distances for larger weights).
\itemize{
\item For networks with more than one component: nodes in different network components are considered to have no path between them and these dyads therefore do not contribute to path length calculations.
}
\item 'avdeg' gives the average degree.
\item 'avdegw' gives the average weighted degree (also called strength).
\item 'degassort' gives the degree assortativity.
\item 'degassortw' gives the weighted degree assortativity.
\item 'degvar' gives the degree variation (variance).
\item 'degvarw' gives the weighted degree variation (variance).
}
}
\examples{

# An example that uses a network created with the traitnet function:

traitnetoutput <- traitnet(n=100, k=10, traittypes = c('cate', 'tnorm'),
allncats = c(5, NA), preftypes = c('sim', 'pop'), linktype = 'stow',
wvals = c(0.8, 0.1), onecomp = TRUE, visnet = TRUE)

net <- traitnetoutput$net

metrics <- c('clust', 'clustw', 'path', 'pathw', 'avdeg', 'avdegw',
'degassort', 'degassortw', 'degvar', 'degvarw')

netmetrics(net, metrics)


# An example of calculating clustering and path length on
two common network types (made with igraph):

library(igraph)

# A random network
randnet <-  as_adjacency_matrix(sample_gnp(100, 0.1), type = 'both',
names = FALSE, sparse = FALSE)

# A scale-free (Barabasi-Albert) network
scalenet <-  as_adjacency_matrix(sample_pa(100, directed = FALSE),
type = 'both', names = FALSE, sparse = FALSE)

# Calculate clustering and path length for the two networks
metrics <- c('clust', 'path')
randnetmetrics <- netmetrics(randnet, metrics)
scalenetmetrics <- netmetrics(scalenet, metrics)
}
\references{
Alain Barrat, Marc Barthelemy, Romualdo Pastor-Satorras, Alessandro Vespignani: The architecture of complex weighted networks, Proc. Natl. Acad. Sci. USA 101, 3747 (2004)
}
\seealso{
\code{\link{traitnet()}}

\code{\link{traitnetsmetrics()}}

\code{\link{igraph}}
}
\author{
Josefine Bohr Brask, \email{bohrbrask@gmail.com}
}
