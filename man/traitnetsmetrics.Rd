% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/traitnetsmetrics.R
\name{traitnetsmetrics}
\alias{traitnetsmetrics}
\title{Measure network metrics on a set of networks}
\usage{
traitnetsmetrics(
  n,
  k,
  traittypes,
  allncats,
  preftypes,
  linktype,
  wvals,
  onecomp,
  nrepls,
  metrics,
  showrepl = TRUE,
  owntraitclasses = NULL,
  owntraitvals = NULL
)
}
\arguments{
\item{n}{An integer indicating the number of individuals (network nodes)}

\item{k}{An integer indicating the average degree (average number of links connected to each node)}

\item{traittypes}{A vector of strings indicating the trait type for each trait ('cate', 'tnorm', 'ranks', or 'own'; see Details)}

\item{allncats}{A vector of integers indicating the number of categories for each trait (numbers for non-categorical traits are not used and may be set to NA, but must be included in the vector)}

\item{preftypes}{A vector of strings indicating the preference type to be used with each trait ('sim', or 'pop'; see Details)}

\item{linktype}{A string indicating the type of link ('stow', 'detw', or 'unw'; see Details)}

\item{wvals}{A vector with the importance (weight) of each trait-preference combination}

\item{onecomp}{Logical. If TRUE then only networks where all the nodes are in a single component (i.e. at least indirectly connected) are used. If FALSE then the networks may consist of more than one component}

\item{nrepls}{An integer indicating the number of replicates (number of networks for which metrics will be measured)}

\item{metrics}{A vector of strings indicating the metrics that should be measured (see Details)}

\item{showrepl}{Logical. If TRUE (default) then the current replicate (network number) is printed to the console}

\item{owntraitclasses}{A vector of strings indicating the trait class for each trait for which trait values are provided by the user ('cate' or 'cont'; see Details)}

\item{owntraitvals}{A matrix with \code{n} rows, and a column for each trait for which trait values are provided by the user (if any). Each column must contain a trait value for each each individual. Can be a vector if there is only a single trait}
}
\value{
a matrix with one row for each network and one column for each metric. The columns are named with the metric names given in the \code{metrics} argument.
}
\description{
\code{traitnetsmetrics()} measures a set of network metrics on an ensemble of networks based on the trait preference model.
}
\details{
For details about trait preference networks, see the documentation (help page) for the \code{traitnet()} function, and the literature in the References section below.

The \code{traittypes}, \code{allncats}, \code{preftypes}, and \code{wvals} arguments must fit together in terms of order (and have the same length),
because the function assumes that the entries in the same place in these vectors fit together.
For example, the first trait type in the \code{traittypes} vector will be used with the first preference type in the \code{preftypes} vector,
the first importance value in the \code{wvals} vector, and the first category number (which may be NA) in the \code{allncats} vector.

About \code{traittypes}:
\itemize{
\item 'cate'  gives categorical trait values. The values consist of the integers from 1 to \code{ncats}, which each indicates a category. Each category is drawn with the same probability.
\item 'tnorm' gives normally distributed trait values (truncated). The values are drawn from a truncated normal distribution that lie in the interval [0,1], with mean = 0.5 and standard deviation = 0.25.
\item 'ranks' gives trait values indicating ranks (e.g. social rank). The values are equally distributed in the interval [0,1]. This corresponds to ranks indicated by integers from 1 to n, transformed to the interval [0,1].
\item 'own' must be given for any trait where trait values are given as input by the user. For such traits, the class needs to be specified in the \code{owntraitclasses} argument.
}

About \code{preftypes}:
\itemize{
\item There are two preference types: 'similarity' and 'popularity' (as described in Brask et al., see References).
\item 'sim' indicates that individuals prefer others that are similar to themselves in terms of the trait.
\item 'pop' indicates that individuals with high trait values are preferred (popular).
}

About \code{linktype}:
\itemize{
\item 'unw' gives unweighted (binary) links. Existing links are indicated with the value 1, non-existing links are indicated with 0.
\item 'stow' gives weighted links with stochasticity, where the weights are drawn from distributions with the social attraction values as means.
\item 'detw' gives deterministic weighted links, where the weight equals the social attraction of the dyad.
\item For weighted links, the link weights are in the interval [0,1], and existing links have a minimum weight of 0.001.
}

About \code{wvals}:
\itemize{
\item The sum of the \code{wval} vector, and each value in the vector, must lie in the interval [0,1], where 0 indicates no importance and 1 indicates full importance.
}

About \code{owntraitvals} and \code{owntraitclasses}:
\itemize{
\item These arguments should only be given if the user wants to provide trait values for one or more of the traits (for example real-world trait values).
}

About \code{owntraitvals}:
\itemize{
\item If the user provides trait values for more than one trait, then \code{owntraitvals} must have one column for each of these traits, and \code{n} rows.
If the user provides trait values for a single trait then \code{owntraitvals} can be a vector of length \code{n} or a matrix with \code{n} rows and 1 column.
Categorical trait values should consist of integers that each indicates a category.
Continuous trait values should consist of numbers between 0 and 1, and empirical trait values on other scales should be transformed to this scale before being used.
The trait values must fit with the trait classes given in the \code{owntraitclasses} argument.
}

About \code{owntraitclasses}:
\itemize{
\item Give 'cate' for categorical traits.
\item Give 'cont' for continuous traits.
}

About \code{metrics}:
\itemize{
\item 'clust' gives the global clustering coefficient, also called transitivity (measured as the ratio of triangles to connected triples).
\item 'clustw' gives the weighted clustering coefficient (as defined in Barrat et al. 2004, see References). Nodes with one link get a weighted clustering of zero.
\item 'path' gives the average path length, i.e. the average unweighted distance between nodes.
\item 'pathw' gives the average weighted path length, i.e. the average weighted distance between nodes (with smaller distances for larger weights).
\itemize{
\item For networks with more than one component: nodes in different network components are considered to have no path between them and these dyads therefore do not contribute to path length calculations.
}
\item 'avdeg' gives the average degree.
\item 'avdegw' gives the average weighted degree (also called strength).
\item 'degassort' gives the degree assortativity.
\item 'degassortw' gives the weighted degree assortativity.
\item 'degvar' gives the degree variation (variance).
\item 'degvarw' gives the weighted degree variation (variance).
}
}
\examples{

# An example where all arguments are defined directly in the call:

traitnetsmetrics(n=100, k=10, traittypes = c('cate', 'tnorm'),
allncats = c(5, NA), preftypes = c('sim', 'pop'), linktype = 'stow',
wvals = c(0.9, 0.1), onecomp = TRUE, nrepls = 10,
metrics = c('clust', 'path', 'avdeg'))


# An example where some arguments are defined before the call,
# and the metric measurements are stored:

metrics <- c('pathw', 'clustw', 'degassort', 'degvar')
traittypes <- c('tnorm', 'cate', 'ranks')
preftypes <- c('sim', 'sim', 'pop')
allncats <- c(5, 2, NA)
wvals <- c(0.5, 0.2, 0.2)
metricresults <- traitnetsmetrics(n=100, k=10, traittypes = traittypes,
allncats = allncats, preftypes = preftypes, linktype = 'stow', wvals = wvals,
onecomp = TRUE, nrepls = 100, metrics = metrics)

}
\references{
\url{https://arxiv.org/abs/2303.08107}
}
\seealso{
\code{\link{netmetrics()}}

\code{\link{traitnet()}}
}
\author{
Josefine Bohr Brask, \email{bohrbrask@gmail.com}
}
